[build-system]
requires = ["setuptools>=38.3.0", "six"]
build-backend = "setuptools.build_meta"

[project]
name = "fs"
authors = [{ name = "Will McGugan", email = "will@willmcgugan.com" }]
maintainers = [{ name = "Martin Larralde", email = "martin.larralde@embl.de" }]
license = { text = "MIT" }
description = "Python's filesystem abstraction layer"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 2.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: System :: Filesystems",
    "Typing :: Typed",
]
dependencies = [
    "appdirs>=1.4.3",
    "setuptools",
    "six>=1.10",
    "enum34>=1.1.6      ;  python_version < '3.4'",
    "typing>=3.6        ;  python_version < '3.6'",
    "backports.os>=0.1  ;  python_version < '3.0'",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/PyFilesystem/pyfilesystem2"
"Bug Reports" = "https://github.com/PyFilesystem/pyfilesystem2/issues"
Documentation = "https://pyfilesystem2.readthedocs.io/en/latest/"
Wiki = "https://www.pyfilesystem.org/"

[project.optional-dependencies]
scandir = ["scandir>=1.5        ;  python_version < '3.5'"]

[tool.setuptools]
zip-safe = false
platforms = ["any"]
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.dynamic]
version = { attr = "fs._version.__version__" }

[tool.setuptools.packages.find]
exclude = ["tests"]
include = ["fs", "fs.*", "fs.opener", "fs.opener.*"]
namespaces = false

[tool.setuptools.package-data]
fs = ["py.typed"]

[tool.distutils.bdist_wheel]
universal = 1

[tool.pydocstyle]
inherit = "false"
ignore = "D102,D105,D200,D203,D213,D406,D407"
match-dir = '(?!tests)(?!docs)[^\.].*'
match = '(?!test)(?!setup)[^\._].*\.py'

[tool.mypy]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["fs.*"]
disallow_any_decorated = false
disallow_any_generics = false
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = false
ignore_missing_imports = false
warn_unused_ignores = false
warn_return_any = false

[[tool.mypy.overrides]]
module = ["fs.test"]
disallow_untyped_defs = false

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
    "missing-function-docstring",
    "consider-using-f-string",
    "missing-module-docstring",
    "wrong-import-position",
]

[tool.isort]
default_section = "THIRDPARTY"
known_first_party = ["fs"]
known_standard_library = ["sys", "typing"]
line_length = 88
profile = "black"
skip_gitignore = true

[tool.coverage.run]
branch = true
omit = ["fs/test.py"]
source = ["fs"]
relative_files = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if False:",
    "it typing.TYPE_CHECKING:",
    "@typing.overload",
    "@overload",
]

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
norecursedirs = [
    ".tox",
    ".pytest_cache",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
]
[tool.ruff]
ignore = ["E402", "F401"]
line-length = 88
select = ["C4", "E", "F", "W", "Q"]

[tool.ruff.per-file-ignores]
"fs/opener/*" = ["F811", "F401"]
"fs/_fscompat.py" = ["F401"]
"fs/__init__.py" = ["F401"]
"fs/_pathcompat.py" = ["C401"]
"fs/*/__init__.py" = ["F401"]
"tests/*" = ["E501"]

[tool.ruff.format]
# Prefer single quotes over double quotes
quote-style = "double"

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
